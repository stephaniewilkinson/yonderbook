<div class="max-w-4xl mx-auto mb-8 mt-16">
  <div class="text-center">
    <h3 class="text-2xl font-bold text-gray-900 mb-4">Importing Books to BookMooch</h3>

    <!-- Animated spinner -->
    <div class="flex justify-center mb-6">
      <div class="relative">
        <div class="w-20 h-20 border-4 border-gray-200 border-t-emerald-600 rounded-full animate-spin"></div>
        <div class="absolute inset-0 flex items-center justify-center">
          <svg class="w-8 h-8 text-emerald-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6.253v13m0-13C10.832 5.477 9.246 5 7.5 5S4.168 5.477 3 6.253v13C4.168 18.477 5.754 18 7.5 18s3.332.477 4.5 1.253m0-13C13.168 5.477 14.754 5 16.5 5c1.746 0 3.332.477 4.5 1.253v13C19.832 18.477 18.246 18 16.5 18c-1.746 0-3.332.477-4.5 1.253"></path>
          </svg>
        </div>
      </div>
    </div>

    <p class="text-gray-600 mb-2" id="status-message">Connecting...</p>
    <p class="text-sm text-gray-500" id="progress-text"></p>

    <div id="error-message" class="hidden mt-4 p-4 bg-red-100 text-red-700 rounded"></div>
  </div>
</div>

<script>
(function() {
  const sessionId = '<%= @session_id %>';
  const protocol = window.location.protocol === 'https:' ? 'wss:' : 'ws:';
  const wsUrl = `${protocol}//${window.location.host}/ws/bookmooch/${sessionId}`;

  const statusMessage = document.getElementById('status-message');
  const progressBar = document.getElementById('progress-bar');
  const progressText = document.getElementById('progress-text');
  const errorMessage = document.getElementById('error-message');

  console.log('Connecting to WebSocket:', wsUrl);
  const ws = new WebSocket(wsUrl);

  ws.onopen = function() {
    console.log('WebSocket connected');
    statusMessage.textContent = 'Starting import...';
  };

  ws.onmessage = function(event) {
    console.log('WebSocket message:', event.data);
    const data = JSON.parse(event.data);

    switch(data.type) {
      case 'connected':
        statusMessage.textContent = 'Connected! Starting import...';
        break;

      case 'status':
        statusMessage.textContent = data.message;
        progressText.textContent = '';
        break;

      case 'progress':
        statusMessage.textContent = data.message;
        if (data.total && data.current) {
          progressText.textContent = `${data.current} of ${data.total} processed`;
        }
        break;

      case 'complete':
        statusMessage.textContent = data.message;
        progressText.textContent = 'Import complete!';
        // Redirect to results page after a brief delay
        setTimeout(function() {
          window.location.href = 'results';
        }, 1500);
        break;

      case 'error':
        errorMessage.textContent = data.message;
        errorMessage.classList.remove('hidden');
        statusMessage.textContent = 'An error occurred';
        break;
    }
  };

  ws.onerror = function(error) {
    console.error('WebSocket error:', error);
    errorMessage.textContent = 'Connection error. Please try again.';
    errorMessage.classList.remove('hidden');
    statusMessage.textContent = 'Connection failed';
  };

  ws.onclose = function() {
    console.log('WebSocket closed');
  };
})();
</script>
